<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ö–∞—Ä—Ç–∞ —Ñ–∏–ª–∏–∞–ª–æ–≤ Repetitor.tj</title>
    
    <!-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Leaflet.js -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <!-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ Leaflet.fullscreen -->
    <script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
    <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css' rel='stylesheet' />
    
    <style>
        /* –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—Ç—Å—Ç—É–ø—ã –∏ –ø–æ–ª—è, —á—Ç–æ–±—ã –∫–∞—Ä—Ç–∞ –∑–∞–Ω–∏–º–∞–ª–∞ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ iframe */
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            overflow: hidden; /* –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª–æ—Å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–Ω—É—Ç—Ä–∏ iframe */
        }
        #map { 
            height: 100%; 
            width: 100%;
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω Leaflet, —á—Ç–æ–±—ã –æ–Ω–∏ —Ö–æ—Ä–æ—à–æ –≤—ã–≥–ª—è–¥–µ–ª–∏ –±–µ–∑ Tailwind */
        .leaflet-popup-content-wrapper {
            border-radius: 0.5rem;
        }
        .leaflet-popup-content {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            font-size: 14px;
            line-height: 1.6;
        }
        .leaflet-popup-content b {
            font-weight: 600;
            color: #1e40af;
        }
        .leaflet-popup-content .address {
            margin-top: 4px;
            color: #4b5563;
        }
    </style>
</head>
<body>
    <!-- –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ - —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç—ã -->
    <div id="map"></div>

    <script>
        // 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–µ–≤ –∫–∞—Ä—Ç—ã
        const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        });
        const satelliteLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
            maxZoom: 19,
            attribution: 'Tiles &copy; Esri'
        });

        // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
        const map = L.map('map', {
            center: [38.8610, 71.2761],
            zoom: 7,
            layers: [osmLayer]
        });

        // 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤ –Ω–∞ –∫–∞—Ä—Ç—É
        const baseMaps = {
            "–°—Ç–∞–Ω–¥–∞—Ä—Ç": osmLayer,
            "–°–ø—É—Ç–Ω–∏–∫": satelliteLayer
        };
        L.control.layers(baseMaps).addTo(map);
        map.addControl(new L.Control.Fullscreen());

        // 4. –î–∞–Ω–Ω—ã–µ GeoJSON —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–∏–ª–∏–∞–ª–∞—Ö
        const geoJsonData = {
            "type": "FeatureCollection",
            "features": [
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–ú–µ—Ö—Ä–æ–±–æ–¥¬ª", "phone": "(+992) 003-003-007", "address": "—Ä. –î–∂–∞–±–±–æ—Ä –†–∞—Å—É–ª–æ–≤, –ø–æ—Å—ë–ª–æ–∫ –ú–µ—Ö—Ä–æ–±–æ–¥, –ì–∏–º–Ω–∞–∑–∏—è –ü–∞–π—Ä–∞–≤–æ–Ω" }, "geometry": { "type": "Point", "coordinates": [69.505477, 40.171987] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–¢—É—Ä—Å—É–Ω–∑–∞–¥–µ¬ª", "phone": "(+992) 003-003-032", "address": "–≥. –¢—É—Ä—Å—É–Ω–∑–∞–¥–µ, —É–ª. –ò. –°–æ–º–æ–Ω–∏ 6" }, "geometry": { "type": "Point", "coordinates": [68.232520, 38.512718] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–ß–∞–≥–æ–Ω–∏ –Ω–∞–≤¬ª", "phone": "(+992) 003-003-099", "address": "–≥. –ò—Å—Ñ–∞—Ä–∞, –∑–¥–∞–Ω–∏–µ ¬´“∂–∞“≥–æ–Ω–∏ –ù–∞–≤¬ª, 3-–π —ç—Ç–∞–∂" }, "geometry": { "type": "Point", "coordinates": [70.621989, 40.125308] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–•—É–¥–∂–∞–Ω–¥-1¬ª", "phone": "(+992) 003-003-055", "address": "–≥. –•—É–¥–∂–∞–Ω–¥, –ø—Ä. –ö–∞–º–æ–ª–∞ –•—É–¥–∂–∞–Ω–¥–∏ 140" }, "geometry": { "type": "Point", "coordinates": [69.621551, 40.280919] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–•—É–¥–∂–∞–Ω–¥-2¬ª", "phone": "(+992) 003-003-066", "address": "–≥. –•—É–¥–∂–∞–Ω–¥, 19 –º–∫—Ä, –¥–æ–º 38" }, "geometry": { "type": "Point", "coordinates": [69.614685, 40.298979] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´82 –º–∫—Ä¬ª", "phone": "(+992) 003-003-082", "address": "–≥. –î—É—à–∞–Ω–±–µ, —É–ª. –ë. –ì–∞—Ñ—É—Ä–æ–≤–∞ 32–ê" }, "geometry": { "type": "Point", "coordinates": [68.740416, 38.580055] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–í–∞—Ç–∞–Ω¬ª", "phone": "(+992) 003-003-007", "address": "–≥. –î—É—à–∞–Ω–±–µ, —É–ª. –ê–π–Ω–∏ 29/9" }, "geometry": { "type": "Point", "coordinates": [68.797301, 38.563505] } },
                { "type": "Feature", "properties": { "title": "–§–∏–ª–∏–∞–ª ¬´–¶–£–ú¬ª", "phone": "(+992) 003-003-077", "address": "–≥. –î—É—à–∞–Ω–±–µ, –ø—Ä. –†—É–¥–∞–∫–∏ 66" }, "geometry": { "type": "Point", "coordinates": [68.788242, 38.578831] } }
            ]
        };

        // 5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∏–∫–æ–Ω–∫–∏
        const blueIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]
        });

        // 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ
        function onEachFeature(feature, layer) {
            if (feature.properties) {
                const popupContent = `<b>${feature.properties.title}</b><br>üìû ${feature.properties.phone}<div class="address">üìç ${feature.properties.address}</div>`;
                layer.bindPopup(popupContent);
            }
        }

        // 7. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GeoJSON —Å–ª–æ—è –Ω–∞ –∫–∞—Ä—Ç—É
        L.geoJSON(geoJsonData, {
            onEachFeature: onEachFeature,
            pointToLayer: (feature, latlng) => L.marker(latlng, {icon: blueIcon})
        }).addTo(map);
    </script>
</body>
</html>
